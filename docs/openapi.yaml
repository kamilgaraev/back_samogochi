openapi: 3.0.3
info:
  title: üéÆ Tamagotchi API
  description: |
    # –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Tamagotchi API! 
    
    **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API –¥–ª—è –∏–≥—Ä—ã-—Ç–∞–º–∞–≥–æ—á–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º –∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å—é.**
    
    ---
    
    ## üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    
    API –∏—Å–ø–æ–ª—å–∑—É–µ—Ç **JWT Bearer —Ç–æ–∫–µ–Ω—ã** –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. 
    
    –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω:
    
    ```http
    Authorization: Bearer YOUR_JWT_TOKEN
    ```
    
    ## üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤
    
    –í—Å–µ –æ—Ç–≤–µ—Ç—ã API –∏–º–µ—é—Ç **–µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É**:
    
    ```json
    {
      "success": true,
      "message": "–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ",
      "data": {
        // –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞
      }
    }
    ```
    
    –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –≤–∞–ª–∏–¥–∞—Ü–∏–∏:
    ```json
    {
      "success": false,
      "message": "–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏", 
      "errors": {
        "email": ["–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email"],
        "password": ["–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"]
      }
    }
    ```
    
    ## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
    
    1. **–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å**: `POST /auth/register`
    2. **–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ `Authorization`
    3. **–ò—Å—Å–ª–µ–¥—É–π—Ç–µ API**: –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Å —Ç–æ–∫–µ–Ω–æ–º
    
    ---
    
    ### üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    
    - üîê **–ü–æ–ª–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è** (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ª–æ–≥–∏–Ω, —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è)
    - üë§ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–º** (–ø—Ä–æ—Ñ–∏–ª—å, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –ø—Ä–æ–≥—Ä–µ—Å—Å) 
    - üé≠ **–ò–≥—Ä–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏** (—Å–ª—É—á–∞–π–Ω—ã–µ, –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ—à–µ–Ω–∏–π)
    - ‚ö° **–ú–∏–∫—Ä–æ–¥–µ–π—Å—Ç–≤–∏—è** (–¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)
    - üìä **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞** (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã, –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤)
    - üëë **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å** (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
    
  version: 1.0.0
  contact:
    name: üí¨ API Support
    email: support@tamagotchi-api.com
    url: https://t.me/your_support_chat
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://your-domain.com/terms
    
servers:
  - url: http://31.130.149.164/api
    description: Production server
  - url: http://localhost:8000/api
    description: Development server

tags:
  - name: Authentication
    description: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º
  - name: Player
    description: –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
  - name: Situations
    description: –ò–≥—Ä–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –∏—Ö –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ
  - name: Micro Actions
    description: –ú–∏–∫—Ä–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  - name: Admin
    description: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  - name: Analytics
    description: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
        email:
          type: string
          format: email
          example: "ivan@example.com"
        is_admin:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
          example: "2025-09-04T06:10:25.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-09-04T06:10:25.000000Z"

    PlayerProfile:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        level:
          type: integer
          minimum: 1
          example: 5
        total_experience:
          type: integer
          minimum: 0
          example: 450
        energy:
          type: integer
          minimum: 0
          maximum: 200
          example: 100
        stress:
          type: integer
          minimum: 0
          maximum: 100
          example: 30
        anxiety:
          type: integer
          minimum: 0
          maximum: 100
          example: 25
        last_login:
          type: string
          format: date-time
          example: "2025-09-04T06:10:25.000000Z"
        last_daily_reward:
          type: string
          format: date-time
          nullable: true
          example: "2025-09-04T00:00:00.000000Z"
        consecutive_days:
          type: integer
          minimum: 0
          example: 3
        created_at:
          type: string
          format: date-time
          example: "2025-09-04T06:10:25.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-09-04T06:10:25.000000Z"

    Situation:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "–°–ª–æ–∂–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞ —Ä–∞–±–æ—Ç–µ"
        description:
          type: string
          example: "–ó–∞–≤—Ç—Ä–∞ —É –≤–∞—Å –≤–∞–∂–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º"
        category:
          type: string
          enum: [work, personal, health, social, education]
          example: "work"
        difficulty_level:
          type: string
          enum: [easy, medium, hard]
          example: "medium"
        min_level_required:
          type: integer
          minimum: 1
          example: 1
        stress_impact:
          type: integer
          minimum: -50
          maximum: 50
          example: 15
        experience_reward:
          type: integer
          minimum: 0
          example: 25
        is_active:
          type: boolean
          example: true
        position:
          type: string
          enum: [phone, tv, desktop, tablet, smartwatch, notification]
          example: "desktop"
          description: "–ú–µ—Å—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        options:
          type: array
          items:
            $ref: '#/components/schemas/SituationOption'

    SituationOption:
      type: object
      properties:
        id:
          type: integer
          example: 1
        situation_id:
          type: integer
          example: 1
        text:
          type: string
          example: "–¢—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∏ –ø–æ—Ä–µ–ø–µ—Ç–∏—Ä–æ–≤–∞—Ç—å"
        stress_change:
          type: integer
          minimum: -50
          maximum: 50
          example: -10
        experience_reward:
          type: integer
          minimum: 0
          example: 15
        energy_cost:
          type: integer
          minimum: 0
          example: 20
        min_level_required:
          type: integer
          minimum: 1
          example: 1
        order:
          type: integer
          example: 1

    MicroAction:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "–ì–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ"
        description:
          type: string
          example: "5 –º–∏–Ω—É—Ç –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–∞"
        category:
          type: string
          enum: [breathing, physical, mental, social]
          example: "breathing"
        stress_reduction:
          type: integer
          minimum: 0
          maximum: 30
          example: 10
        energy_cost:
          type: integer
          minimum: 0
          example: 5
        duration_minutes:
          type: integer
          minimum: 1
          example: 5
        experience_reward:
          type: integer
          minimum: 0
          example: 3
        min_level_required:
          type: integer
          minimum: 1
          example: 1
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ActivityLog:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          nullable: true
          example: 1
        event_type:
          type: string
          example: "user.login"
        event_data:
          type: object
          nullable: true
          example:
            ip: "192.168.1.1"
            user_agent: "Mozilla/5.0..."
        ip_address:
          type: string
          nullable: true
          example: "192.168.1.1"
        user_agent:
          type: string
          nullable: true
          example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        created_at:
          type: string
          format: date-time
          example: "2025-09-04T06:10:25.000000Z"

    GameConfig:
      type: object
      properties:
        id:
          type: integer
          example: 1
        key:
          type: string
          example: "daily_reward_base_experience"
        value:
          type: string
          example: "50"
        description:
          type: string
          nullable: true
          example: "–ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞ –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      
  responses:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        data:
          type: object
          
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
        error:
          type: string
          example: "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏"
          
    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
        errors:
          type: object
          example:
            email: ["–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å"]
            password: ["–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤"]

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            player:
              $ref: '#/components/schemas/PlayerProfile'
            token:
              type: string
              example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
            token_type:
              type: string
              example: "bearer"
            expires_in:
              type: integer
              example: 900
              description: "–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ —Ç–æ–∫–µ–Ω–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö"

paths:
  # Authentication endpoints
  /auth/register:
    post:
      tags:
        - Authentication
      summary: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      description: |
        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞.
        
        **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–∞—Ä–æ–ª—é:**
        - –ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤
        - –ú–∏–Ω–∏–º—É–º 1 —Å—Ç—Ä–æ—á–Ω–∞—è –±—É–∫–≤–∞ (a-z)
        - –ú–∏–Ω–∏–º—É–º 1 –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ (A-Z)  
        - –ú–∏–Ω–∏–º—É–º 1 —Ü–∏—Ñ—Ä–∞ (0-9)
        - –ú–∏–Ω–∏–º—É–º 1 —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª (@$!%*?&)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 255
                  pattern: "^[a-zA-Z–∞-—è–ê-–Ø—ë–Å\\s\\-'\\.]+$"
                  example: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  description: "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã)"
                email:
                  type: string
                  format: email
                  maxLength: 255
                  example: "ivan@example.com"
                password:
                  type: string
                  minLength: 8
                  pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$"
                  example: "MyPass123!"
                  description: "–°–ª–æ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º"
                password_confirmation:
                  type: string
                  example: "MyPass123!"
                  description: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è (–¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å password)"
      responses:
        '201':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/responses/AuthResponse'
        '422':
          description: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'
        '500':
          description: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
      description: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email –∏ –ø–∞—Ä–æ–ª—é
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                password:
                  type: string
                  minLength: 6
                  example: "MyPass123!"
      responses:
        '200':
          description: –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
          content:
            application/json:
              schema:
                $ref: '#/components/responses/AuthResponse'
        '401':
          description: –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/ErrorResponse'
                  - type: object
                    properties:
                      message:
                        example: "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
        '422':
          description: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
      description: –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/SuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
        '401':
          description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        '500':
          description: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞
      description: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ JWT —Ç–æ–∫–µ–Ω–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      security:
        - bearerAuth: []
      responses:
        '200':
          description: –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                      token_type:
                        type: string
                        example: "bearer"
                      expires_in:
                        type: integer
                        example: 900
        '401':
          description: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: –ó–∞–ø—Ä–æ—Å —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
      description: –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —Å–±—Ä–æ—Å—É –ø–∞—Ä–æ–ª—è –Ω–∞ email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
      responses:
        '200':
          description: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/SuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–±—Ä–æ—Å—É –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ email"
        '404':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/ErrorResponse'
                  - type: object
                    properties:
                      message:
                        example: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω"
        '422':
          description: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
      description: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ —Å–±—Ä–æ—Å–∞
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - token
                - password
                - password_confirmation
              properties:
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                token:
                  type: string
                  example: "reset_token_here"
                password:
                  type: string
                  minLength: 8
                  pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$"
                  example: "NewPass123!"
                password_confirmation:
                  type: string
                  example: "NewPass123!"
      responses:
        '200':
          description: –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/SuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω"
        '400':
          description: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–ª–∏ email
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'
        '422':
          description: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'

  /auth/verify-email:
    post:
      tags:
        - Authentication
      summary: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email
      description: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è email –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: "verification_token_here"
      responses:
        '200':
          description: Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/SuccessResponse'
                  - type: object
                    properties:
                      message:
                        example: "Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
        '400':
          description: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/responses/ErrorResponse'
                  - type: object
                    properties:
                      message:
                        example: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω"
        '422':
          description: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'
    
  # Player endpoints
  /player/profile:
    $ref: './paths/player.yaml#/~1player~1profile'
  /player/stats:
    $ref: './paths/player.yaml#/~1player~1stats'
  /player/daily-reward:
    $ref: './paths/player.yaml#/~1player~1daily-reward'
  /player/add-experience:
    $ref: './paths/player.yaml#/~1player~1add-experience'
  /player/update-energy:
    $ref: './paths/player.yaml#/~1player~1update-energy'
  /player/update-stress:
    $ref: './paths/player.yaml#/~1player~1update-stress'
    
  # Situations endpoints
  /situations:
    $ref: './paths/situations.yaml#/~1situations'
  /situations/random:
    $ref: './paths/situations.yaml#/~1situations~1random'
  /situations/history:
    $ref: './paths/situations.yaml#/~1situations~1history'
  /situations/recommendations:
    $ref: './paths/situations.yaml#/~1situations~1recommendations'
  /situations/{id}:
    $ref: './paths/situations.yaml#/~1situations~1{id}'
  /situations/{id}/complete:
    $ref: './paths/situations.yaml#/~1situations~1{id}~1complete'
    
  # Micro Actions endpoints
  /micro-actions:
    $ref: './paths/micro-actions.yaml#/~1micro-actions'
  /micro-actions/recommendations:
    $ref: './paths/micro-actions.yaml#/~1micro-actions~1recommendations'
  /micro-actions/history:
    $ref: './paths/micro-actions.yaml#/~1micro-actions~1history'
  /micro-actions/{id}/perform:
    $ref: './paths/micro-actions.yaml#/~1micro-actions~1{id}~1perform'
    
  # Admin endpoints (only for administrators)
  /admin/configs:
    $ref: './paths/admin.yaml#/~1admin~1configs'
  /admin/configs/{key}:
    $ref: './paths/admin.yaml#/~1admin~1configs~1{key}'
  /admin/situations:
    $ref: './paths/admin.yaml#/~1admin~1situations'
  /admin/situations/{id}:
    $ref: './paths/admin.yaml#/~1admin~1situations~1{id}'
    
  # Analytics endpoints
  /analytics/dashboard:
    $ref: './paths/analytics.yaml#/~1analytics~1dashboard'
  /analytics/player-behavior:
    $ref: './paths/analytics.yaml#/~1analytics~1player-behavior'
  /analytics/situation-stats:
    $ref: './paths/analytics.yaml#/~1analytics~1situation-stats'
  /analytics/activity-stats:
    $ref: './paths/analytics.yaml#/~1analytics~1activity-stats'