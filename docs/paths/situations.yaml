/situations:
  get:
    tags:
      - Situations
    summary: Список доступных ситуаций
    description: Получение списка ситуаций, доступных для текущего уровня игрока
    security:
      - bearerAuth: []
    parameters:
      - name: category
        in: query
        description: Фильтр по категории ситуации
        required: false
        schema:
          type: string
          enum: [work, personal, health, social, education]
      - name: difficulty
        in: query
        description: Фильтр по сложности
        required: false
        schema:
          type: string
          enum: [easy, medium, hard]
      - name: page
        in: query
        description: Номер страницы для пагинации
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
    responses:
      '200':
        description: Список ситуаций получен успешно
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    situations:
                      type: array
                      items:
                        $ref: '../openapi.yaml#/components/schemas/Situation'
                    pagination:
                      type: object
                      properties:
                        current_page:
                          type: integer
                          example: 1
                        total_pages:
                          type: integer
                          example: 5
                        total:
                          type: integer
                          example: 45
      '401':
        description: Неавторизованный запрос

/situations/random:
  get:
    tags:
      - Situations
    summary: Случайная ситуация
    description: Получение случайной ситуации, подходящей по уровню и категории предпочтений
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Случайная ситуация получена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../openapi.yaml#/components/schemas/Situation'
      '404':
        description: Подходящие ситуации не найдены
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '401':
        description: Неавторизованный запрос

/situations/history:
  get:
    tags:
      - Situations
    summary: История пройденных ситуаций
    description: Получение истории ситуаций, пройденных игроком
    security:
      - bearerAuth: []
    parameters:
      - name: page
        in: query
        description: Номер страницы для пагинации
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        description: Количество записей на страницу
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 50
          default: 20
    responses:
      '200':
        description: История получена успешно
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    history:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          situation:
                            $ref: '../openapi.yaml#/components/schemas/Situation'
                          option_chosen:
                            $ref: '../openapi.yaml#/components/schemas/SituationOption'
                          completed_at:
                            type: string
                            format: date-time
                            example: "2025-09-04T10:15:30Z"
                          results:
                            type: object
                            properties:
                              experience_gained:
                                type: integer
                                example: 25
                              stress_change:
                                type: integer
                                example: -10
                    pagination:
                      type: object
                      properties:
                        current_page:
                          type: integer
                          example: 1
                        total_pages:
                          type: integer
                          example: 3
                        total:
                          type: integer
                          example: 45
      '401':
        description: Неавторизованный запрос

/situations/recommendations:
  get:
    tags:
      - Situations
    summary: Рекомендованные ситуации
    description: Получение ситуаций, рекомендованных для текущего состояния игрока
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Рекомендации получены успешно
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    recommended_situations:
                      type: array
                      items:
                        allOf:
                          - $ref: '../openapi.yaml#/components/schemas/Situation'
                          - type: object
                            properties:
                              recommendation_reason:
                                type: string
                                example: "Поможет снизить текущий уровень стресса"
                              match_score:
                                type: number
                                format: float
                                minimum: 0
                                maximum: 1
                                example: 0.85
      '401':
        description: Неавторизованный запрос

/situations/{id}:
  get:
    tags:
      - Situations
    summary: Детали ситуации
    description: Получение подробной информации о конкретной ситуации
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID ситуации
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: Детали ситуации получены
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../openapi.yaml#/components/schemas/Situation'
      '404':
        description: Ситуация не найдена
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '401':
        description: Неавторизованный запрос

/situations/{id}/start:
  post:
    tags:
      - Situations
    summary: Инициация ситуации
    description: Начало ситуации с применением базового стресса (stress_impact). После инициации ситуацию можно завершить выбором опции.
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID ситуации
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: Ситуация успешно начата
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Ситуация успешно начата!"
                data:
                  type: object
                  properties:
                    situation:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: "Горящий дедлайн на работе"
                        description:
                          type: string
                          example: "Ваш руководитель просит срочно закончить проект..."
                        category:
                          type: string
                          example: "work"
                        stress_impact:
                          type: integer
                          example: 15
                        position:
                          type: string
                          example: "phone"
                          description: "Место отображения ситуации (phone, tv, desktop, etc.)"
                    options:
                      type: array
                      items:
                        $ref: '../openapi.yaml#/components/schemas/SituationOption'
                    player_changes:
                      type: object
                      properties:
                        old_stress:
                          type: integer
                          example: 30
                        new_stress:
                          type: integer
                          example: 45
                        stress_change:
                          type: integer
                          example: 15
                        current_energy:
                          type: integer
                          example: 80
                        current_level:
                          type: integer
                          example: 5
                    player_situation_id:
                      type: integer
                      example: 123
                      description: "ID записи начатой ситуации"
      '400':
        description: Ошибка при начале ситуации (кулдаун, низкий уровень, ситуация уже начата)
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Вы еще не можете начать новую ситуацию"
                cooldown_ends_at:
                  type: string
                  format: date-time
                  example: "2025-01-15T14:30:00Z"
                  description: "Время окончания кулдауна (если применимо)"
      '404':
        description: Ситуация не найдена
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '401':
        description: Неавторизованный запрос

/situations/{id}/complete:
  post:
    tags:
      - Situations
    summary: Завершение ситуации
    description: Выбор варианта решения ситуации и получение результатов
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: ID ситуации
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - option_id
            properties:
              option_id:
                type: integer
                example: 2
                description: "ID выбранного варианта решения"
    responses:
      '200':
        description: Ситуация успешно завершена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Ситуация успешно завершена"
                data:
                  type: object
                  properties:
                    experience_gained:
                      type: integer
                      example: 25
                    stress_change:
                      type: integer
                      example: -10
                    energy_spent:
                      type: integer
                      example: 20
                    level_up:
                      type: boolean
                      example: false
                    new_stats:
                      type: object
                      properties:
                        level:
                          type: integer
                          example: 5
                        experience:
                          type: integer
                          example: 475
                        energy:
                          type: integer
                          example: 80
                        stress:
                          type: integer
                          example: 20
      '400':
        description: Недостаточно энергии или другие ограничения
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '404':
        description: Ситуация или вариант не найден
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '401':
        description: Неавторизованный запрос
