/player/profile:
  get:
    tags:
      - Player
    summary: Получение профиля игрока
    description: Возвращает текущий профиль игрока с актуальной статистикой
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Профиль игрока получен успешно
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Профиль игрока успешно получен"
                data:
                  $ref: '../openapi.yaml#/components/schemas/PlayerProfile'
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '401':
        description: Неавторизованный запрос
        
  put:
    tags:
      - Player
    summary: Обновление профиля игрока
    description: Обновление данных профиля игрока (стресс, тревожность)
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              stress:
                type: integer
                minimum: 0
                maximum: 100
                example: 45
                description: "Уровень стресса"
              anxiety:
                type: integer
                minimum: 0
                maximum: 100
                example: 30
                description: "Уровень тревожности"
    responses:
      '200':
        description: Профиль успешно обновлен
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Профиль успешно обновлен"
                data:
                  $ref: '../openapi.yaml#/components/schemas/PlayerProfile'
                updated_fields:
                  type: array
                  description: "Список обновленных полей"
                  items:
                    type: string
                  example: ["stress", "anxiety"]
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '401':
        description: Неавторизованный запрос

/player/personal-info:
  put:
    tags:
      - Player
    summary: Обновление персональной информации
    description: Обновление персональных данных профиля игрока (любимая песня, фильм, книга, блюдо, имя лучшего друга)
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              favorite_song:
                type: string
                maxLength: 255
                example: "Bohemian Rhapsody"
                description: "Любимая песня"
              favorite_movie:
                type: string
                maxLength: 255
                example: "Inception"
                description: "Любимый фильм"
              favorite_book:
                type: string
                maxLength: 255
                example: "1984"
                description: "Любимая книга"
              favorite_dish:
                type: string
                maxLength: 255
                example: "Пицца"
                description: "Любимое блюдо"
              best_friend_name:
                type: string
                maxLength: 255
                example: "Александр"
                description: "Имя лучшего друга"
          examples:
            full_update:
              summary: Полное обновление всех полей
              value:
                favorite_song: "Bohemian Rhapsody"
                favorite_movie: "Inception"
                favorite_book: "1984"
                favorite_dish: "Пицца"
                best_friend_name: "Александр"
            partial_update:
              summary: Частичное обновление
              value:
                favorite_song: "Imagine"
                favorite_movie: "The Matrix"
    responses:
      '200':
        description: Персональная информация успешно обновлена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Персональная информация успешно обновлена"
                data:
                  $ref: '../openapi.yaml#/components/schemas/PlayerProfile'
                updated_fields:
                  type: array
                  description: "Список обновленных полей"
                  items:
                    type: string
                  example: ["favorite_song", "favorite_movie"]
      '400':
        description: Ошибка при обновлении данных
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '401':
        description: Неавторизованный запрос
      '422':
        description: Ошибки валидации
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: "Ошибки валидации"
                errors:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string

/player/stats:
  get:
    tags:
      - Player
    summary: Статистика игрока
    description: Получение детальной статистики игрока
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Статистика получена успешно
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    total_situations_completed:
                      type: integer
                      example: 45
                    total_micro_actions_performed:
                      type: integer
                      example: 120
                    average_stress_level:
                      type: number
                      format: float
                      example: 35.5
                    time_played_hours:
                      type: integer
                      example: 24
                    achievements:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          unlocked_at:
                            type: string
                            format: date-time
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '401':
        description: Неавторизованный запрос

/player/daily-reward:
  post:
    tags:
      - Player
    summary: Получение ежедневной награды
    description: Получение ежедневной награды (опыт, энергия). Доступно раз в день.
    security:
      - bearerAuth: []
    responses:
      '200':
        description: Награда получена успешно
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: "Ежедневная награда получена"
                data:
                  type: object
                  properties:
                    experience_gained:
                      type: integer
                      example: 50
                    energy_gained:
                      type: integer
                      example: 20
                    consecutive_days:
                      type: integer
                      example: 5
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '400':
        description: Награда уже получена сегодня
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/responses/ErrorResponse'
      '401':
        description: Неавторизованный запрос

/player/add-experience:
  post:
    tags:
      - Player
    summary: Добавление опыта
    description: Добавление опыта игроку (для внутренних нужд)
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - amount
            properties:
              amount:
                type: integer
                minimum: 1
                maximum: 1000
                example: 25
                description: "Количество опыта для добавления"
              reason:
                type: string
                example: "Завершение ситуации"
                description: "Причина добавления опыта"
    responses:
      '200':
        description: Опыт успешно добавлен
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    experience_added:
                      type: integer
                      example: 25
                    level_up:
                      type: boolean
                      example: false
                    old_level:
                      type: integer
                      example: 5
                    new_level:
                      type: integer
                      example: 5
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '401':
        description: Неавторизованный запрос

/player/update-energy:
  post:
    tags:
      - Player
    summary: Обновление энергии
    description: Изменение уровня энергии игрока
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - amount
            properties:
              amount:
                type: integer
                minimum: -200
                maximum: 200
                example: -20
                description: "Изменение энергии (может быть отрицательным)"
    responses:
      '200':
        description: Энергия успешно обновлена
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    old_energy:
                      type: integer
                      example: 100
                    new_energy:
                      type: integer
                      example: 80
                    change:
                      type: integer
                      example: -20
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '401':
        description: Неавторизованный запрос

/player/update-stress:
  post:
    tags:
      - Player
    summary: Обновление стресса
    description: Изменение уровня стресса игрока
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - amount
            properties:
              amount:
                type: integer
                minimum: -100
                maximum: 100
                example: -10
                description: "Изменение стресса (может быть отрицательным)"
    responses:
      '200':
        description: Стресс успешно обновлен
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: object
                  properties:
                    old_stress:
                      type: integer
                      example: 40
                    new_stress:
                      type: integer
                      example: 30
                    change:
                      type: integer
                      example: -10
                player_state:
                  $ref: '../openapi.yaml#/components/schemas/PlayerState'
      '401':
        description: Неавторизованный запрос
